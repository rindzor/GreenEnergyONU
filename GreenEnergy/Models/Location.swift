//
//  Location.swift
//  GreenEnergy
//
//  Created by  mac on 12.04.2021.
//

import Foundation

enum Location: String, CaseIterable {
    case vinnitskaya = "–í–∏–Ω–Ω–∏—Ü–∫–∞—è"
    case volynskaya = "–í–æ–ª—ã–Ω—Å–∫–∞—è"
    case dnepr = "–î–Ω–µ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å–∫–∞—è"
    case donetskaya = "–î–æ–Ω–µ—Ü–∫–∞—è"
    case jitomirskaya = "–ñ–∏—Ç–æ–º–∏—Ä—Å–∫–∞—è"
    case zakarpatskaya = "–ó–∞–∫–∞—Ä–ø–∞—Ç—Å–∫–∞—è"
    case zaporojskaya = "–ó–∞–ø–æ—Ä–æ–∂—Å–∫–∞—è"
    case ivano = "–ò–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫–æ–≤—Å–∫–∞—è"
    case kievskaya = "–ö–∏–µ–≤—Å–∫–∞—è"
    case kirovogradskaya = "–ö–∏—Ä–æ–≤–æ–≥—Ä–∞–¥—Å–∫–∞—è"
    case luganskaya = "–õ—É–≥–∞–Ω—Å–∫–∞—è"
    case lvovskaya = "–õ—å–≤–æ–≤—Å–∫–∞—è"
    case nikolayevskaya = "–ù–∏–∫–æ–ª–∞–µ–≤—Å–∫–∞—è"
    case odesskaya = "–û–¥–µ—Å—Å–∫–∞—è"
    case poltavskaya = "–ü–æ–ª—Ç–∞–≤—Å–∫–∞—è"
    case rovenskaya = "–†–æ–≤–µ–Ω—Å–∫–∞—è"
    case sumskaya = "–°—É–º—Å–∫–∞—è"
    case ternopolskaya = "–¢–µ—Ä–Ω–æ–ø–æ–ª—å—Å–∫–∞—è"
    case kharkovskaya = "–•–∞—Ä—å–∫–æ–≤—Å–∫–∞—è"
    case khersonskaya = "–•–µ—Ä—Å–æ–Ω—Å–∫–∞—è"
    case khmelnitskaya = "–•–º–µ–ª—å–Ω–∏—Ü–∫–∞—è"
    case cherkasskaya = "–ß–µ—Ä–∫–∞—Å—Å–∫–∞—è"
    case chernovitskaya = "–ß–µ—Ä–Ω–æ–≤–∏—Ü–∫–∞—è"
    case chernigovskaya = "–ß–µ—Ä–Ω–∏–≥–æ–≤—Å–∫–∞—è"
}

enum BatteryPlace: String, CaseIterable {
    case ground = "–ó–µ–º–ª—è"
    case flatRoof = "–ü–ª–æ—Å–∫–∞—è –∫—Ä–æ–≤–ª—è"
    case angleRoof = "–°–∫–∞—Ç–Ω–∞—è –∫—Ä–æ–≤–ª—è"
}

class SolarSolution {
    
    static let shared = SolarSolution()

    
    func doCalc(region: String, module: String, power: Double, angel: Int, azimuth: Int, place: String) -> ([Double], Double) {
        var pr = 0.98;
        
        var k: [[Double]] = [
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 1.01, 1.01, 1.01, 1.02, 1.02, 1.02, 1.03, 1.03, 1.03, 1.03, 1.03, 1.03, 1.03, 1.04, 1.04, 1.04],
            [0.99, 1, 1.01, 1.01, 1.02, 1.02, 1.03, 1.04, 1.04, 1.05, 1.05, 1.05, 1.06, 1.06, 1.06, 1.06, 1.07, 1.07, 1.07],
            [0.98, 0.99, 1, 1.01, 1.02, 1.03, 1.04, 1.05, 1.05, 1.06, 1.07, 1.07, 1.08, 1.08, 1.08, 1.09, 1.09, 1.09, 1.09, 1.1],
            [0.97, 0.98, 1, 1.01, 1.02, 1.03, 1.04, 1.05, 1.06, 1.07, 1.08, 1.09, 1.09, 1.1, 1.1, 1.11, 1.11, 1.11, 1.11],
            [0.96, 0.97, 0.99, 1, 1.02, 1.03, 1.05, 1.06, 1.07, 1.08, 1.09, 1.1, 1.1, 1.11, 1.12, 1.12, 1.12, 1.12, 1.12],
            [0.94, 0.96, 0.98, 1, 1.01, 1.03, 1.04, 1.06, 1.07, 1.08, 1.09, 1.10, 1.11, 1.12, 1.12, 1.13, 1.13, 1.13, 1.13],
            [0.93, 0.95, 0.97, 0.99, 1, 1.02, 1.04, 1.06, 1.07, 1.08, 1.09, 1.1, 1.11, 1.12, 1.12, 1.13, 1.13, 1.13, 1.13],
            [0.91, 0.93, 0.95, 0.97, 0.99, 1.01, 1.03, 1.04, 1.06, 1.07, 1.09, 1.1, 1.1, 1.11, 1.12, 1.12, 1.13, 1.13, 1.13],
            [0.88, 0.91, 0.93, 0.96, 0.98, 1, 1.01, 1.03, 1.05, 1.06, 1.07, 1.08, 1.09, 1.1, 1.1, 1.11, 1.11, 1.12, 1.12, 1.12],
            [0.87, 0.90, 0.92, 0.94, 0.95, 1, 1.01, 1.02, 1.04, 1.05, 1.03, 1.03, 1.07, 1, 1, 1.11, 1.11, 1.1, 1.1, 1.1],
            [0.85, 0.86, 0.87, 0.87, 0.88, 0.92, 0.93, 0.94, 0.94, 0.96, 0.99, 1, 1.01, 1.01, 1.03, 1.04, 1.04, 1.06, 1.08, 1.08],
            [0.82, 0.82, 0.83, 0.85, 0.86, 0.9, 0.92, 0.92, 0.93, 0.94, 0.98, 1, 1.01, 1.01, 1.03, 1.03, 1.03, 1.05, 1.06, 1.06],
            [0.80, 0.81, 0.83, 0.84, 0.85, 0.85, 0.86, 0.88, 0.89, 0.9, 0.91, 0.92, 0.94, 0.93, 0.94, 0.95, 0.96, 0.97, 1.01, 1.02],
            [0.77, 0.79, 0.82, 0.84, 0.84, 0.84, 0.85, 0.88, 0.89, 0.9, 0.91, 0.92, 0.94, 0.93, 0.94, 0.95, 0.96, 0.97, 0.98, 0.99],
            [0.74, 0.75, 0.77, 0.79, 0.81, 0.84, 0.86, 0.87, 0.87, 0.91, 0.92, 0.94, 0.94, 0.94, 0.94, 0.95, 0.95, 0.95, 0.95, 0.95],
            [0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.79, 0.8, 0.81, 0.82, 0.84, 0.84, 0.86, 0.86, 0.87, 0.88, 0.89, 0.9, 0.9],
            [0.67, 0.69, 0.71, 0.73, 0.75, 0.75, 0.75, 0.77, 0.78, 0.78, 0.79, 0.8, 0.81, 0.81, 0.82, 0.83, 0.83, 0.84, 0.84, 0.85],
            [0.64, 0.65, 0.68, 0.69, 0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.76, 0.77, 0.78, 0.79, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8],
        ]
        
        var pryamaya_na_gorizont: [String : [Double]] = [
        
            "–ê–† –ö—Ä—ã–º":[1270,    2060,    3050,    4300,    5440,    5840,    6200,    5340,    4070,    2670,    1550,    1070],
            "–í–∏–Ω–Ω–∏—Ü–∫–∞—è":[1070,    1890,    2940,    3920,    5190,    5300,    5160,    4680,    3210,    1970,    1100,    900],
            "–í–æ–ª—ã–Ω—Å–∫–∞—è":[1020,    1770,    2830,    3910,    5050,    5080,    4940,    4550,    3010,    1830,    1050,    790],
            "–î–Ω–µ–ø—Ä–æ–ø–µ—Ç—Ä–æ–≤—Å–∫–∞—è":[1210,    1990,    2980,    4050,    5550,    5570,    5700,    5080,    3660,    2270,    1200,    960],
            "–î–æ–Ω–µ—Ü–∫–∞—è":[1210,    1990,    2940,    4040,    5480,    5550,    5660,    5090,    3670,    2240,    1230,    960],
            "–ñ–∏—Ç–æ–º–∏—Ä—Å–∫–∞—è":[1010,    1820,    2870,    3880,    5160,    5190,    5040,    4660,    3060,    1870,    1040,    830,],
            "–ó–∞–∫–∞—Ä–ø–∞—Ç—Å–∫–∞—è":[1130,    1910,    3010,    4030,    5010,    5310,    5250,    4820,    3330,    2020,    1190,    880],
            "–ó–∞–ø–æ—Ä–æ–∂—Å–∫–∞—è":[1210,    2000,    2910,    4200,    5620,    5720,    5880,    5180,    3870,    2440,    1250,    950],
            "–ò–≤–∞–Ω–æ-–§—Ä–∞–Ω–∫–æ–≤—Å–∫–∞—è":[1190,    1930,    2840,    3680,    4540,    4750,    4760,    4400,    3060,    2000,    1200,    940],
            "–ö–∏–µ–≤—Å–∫–∞—è":[1070,    1870,    2950,    3960,    5250,    5220,    5250,    4670,    3120,    1940,    1020,    860],
            "–ö–∏—Ä–æ–≤–æ–≥—Ä–∞–¥—Å–∫–∞—è":[1200,    1950,    2960,    4070,    5470,    5490,    5570,    4920,    3570,    2240,    1140,    960],
            "–õ—É–≥–∞–Ω—Å–∫–∞—è":[1230,    2060,    3050,    4050,    5460,    5570,    5650,    4990,    3620,    2230,    1260,    0930],
            "–õ—å–≤–æ–≤—Å–∫–∞—è":[1080,    1830,    2820,    3780,    4670,    4830,    4830,    4450,    3000,    1850,    1060,    830],
            "–ù–∏–∫–æ–ª–∞–µ–≤—Å–∫–∞—è":[1250,    2100,    3070,    4380,    5650,    5850,    6003,    5340,    3930,    2520,    1360,    1040],
            "–û–¥–µ—Å—Å–∫–∞—è":[1250,    2110,    3080,    4380,    5650,    5850,    6040,    5330,    3930 ,   2520,    1360,    1040],
            "–ü–æ–ª—Ç–∞–≤—Å–∫–∞—è":[1180,    1960,    3050,    4000,    5400,    5440,    5510,    4870,    3420,    2110,    1150,    910,],
            "–†–æ–≤–µ–Ω—Å–∫–∞—è":[    1010,    1810,    2830,    3870,    5080,    5170,    4980,    4580,    3020,    1870,    1040,    810],
            "–°—É–º—Å–∫–∞—è":[    1130,    1930,    3050,    3980,    5270,    5320,    5380,    4670,    3190,    1980,    1100,    860,],
            "–¢–µ—Ä–Ω–æ–ø–æ–ª—å—Å–∫–∞—è":[    1090,    1860,    2850,    3850,    4840,    5000,    4930,    4510,    3080,    1910,    1090,    850,],
            "–•–∞—Ä—å–∫–æ–≤—Å–∫–∞—è":[1190,    2020,    3050,    3920,    5380,    5460,    5560,    4880,    3490,    2100,    1190,    900],
            "–•–µ—Ä—Å–æ–Ω—Å–∫–∞—è":[    1300,    2130,    3080,    4360,    5680,    5760,    6000,    5290,    4000,    2570,    1360,    1040,],
            "–•–º–µ–ª—å–Ω–∏—Ü–∫–∞—è":[    1090,    1860,    2870,    3850,    5080,    5210,    5040,    4580,    3140,    1980,    1100,    870,],
            "–ß–µ—Ä–∫–∞—Å—Å–∫–∞—è":[    1150,    1910,    2940,    3990,    5440,    5460,    5540,    4870,    3400,    2130,    1090,    910,],
            "–ß–µ—Ä–Ω–æ–≤–∏—Ü–∫–∞—è":[1190,    1930,    2840,    3680,    4540,    4750,    4760,    4400,    3060,    2000,    1200,    940,],
            "–ß–µ—Ä–Ω–∏–≥–æ–≤—Å–∫–∞—è":[990,    1800,    2920,    3960,    5170,    5190,    5120,    4540,    3000,    1860,    980,    750,]
        ]

        var tip_modulej: [String : Double] = [
            "–ú–æ–Ω–æ–∫—Ä–∏—Å—Ç–∞–ª–ª":   -0.38,
            "–ü–æ–ª–∏–∫—Ä–∏—Å—Ç–∞–ª–ª":   -0.41,
            "TF":             -0.25
        ]
        
        var tip_modulej_kbt_m2: [String : Double] = [
            "–ú–æ–Ω–æ–∫—Ä–∏—Å—Ç–∞–ª–ª":    0.183,
            "–ü–æ–ª–∏–∫—Ä–∏—Å—Ç–∞–ª–ª":    0.165,
            "TF":              0.133
        ]
        
        
        var place_install: [String : Double] = [
            "–°–∫–∞—Ç–Ω–∞—è –∫—Ä–æ–≤–ª—è":   1,
            "–ó–µ–º–ª—è":            2.22,
            "–ü–ª–æ—Å–∫–∞—è –∫—Ä–æ–≤–ª—è":   1.78
        ]
        
        var days_num: [Int : Int] = [
            0: 31,
            1: 28,
            2: 31,
            3: 30,
            4: 31,
            5: 30,
            6: 31,
            7: 31,
            8: 30,
            9: 31,
            10: 30,
            11: 31
        ]
        
        var ploshhad_stancii = 0.0
        var vyrabotka_god = 0.0
        var pryamaya_pereschet: [Double] = [0,0,0,0,0,0,0,0,0,0,0,0]
        var summa: [Double] = [0,0,0,0,0,0,0,0,0,0,0,0]
        var moshhnost_uchetom_temperatury: [Double] = [0,0,0,0,0,0,0,0,0,0,0,0]
        var sutochnaya_generaciya: [Double] = [0,0,0,0,0,0,0,0,0,0,0,0]
        var mesyachnaya_generaciya: [Double] = [0,0,0,0,0,0,0,0,0,0,0,0]
        var vyrabotka_stancii: [Double] = [0,0,0,0,0,0,0,0,0,0,0,0]
        
        let s = power * place_install[place]! / tip_modulej_kbt_m2[module]!
        print(s)
        
        for i in 0..<12 {
            
            pryamaya_pereschet[i] = pryamaya_na_gorizont[region]![i] * k[angel][azimuth]
            
            summa[i] =  pryamaya_pereschet[i]
            
            moshhnost_uchetom_temperatury[i] = ( tip_modulej[module]!/100 * power )  + power
            
            sutochnaya_generaciya[i] = (summa[i] * moshhnost_uchetom_temperatury[i] ) / 1000
            
            mesyachnaya_generaciya[i] = Double(days_num[i]!) * sutochnaya_generaciya[i] ;
            
            vyrabotka_stancii[i] = mesyachnaya_generaciya[i] * pr ;
            
            vyrabotka_god += (vyrabotka_stancii[i]);
        }
        print("üé±", vyrabotka_stancii)
        print(vyrabotka_god)
        
        return (vyrabotka_stancii, s)
    }
}
